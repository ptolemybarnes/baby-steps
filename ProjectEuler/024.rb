	
############################################ https://projecteuler.net/problem=24 ########################################################
#########################################################################################################################################
#####|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^|#####
#####|									   			__________              ___.  .__                   ________    _____  										      	 |#####
#####|					          			\______   \______  ____ \_ |_ |  |   ____   _____   \_____  \  /  |  | 										      	 |#####
#####|										 			|     ___/\_  __ \/  _ \| __ \|  | _/ __ \ /     \   /  ____/ /   |  |_										      	 |#####
#####|													|    |     |  | \(  <_> ) \_\ \  |_\  ___/|  Y Y  \ /       \/    ^   /										      	 |#####
#####|													|____|     |__|   \____/|___  /____/\___  >__|_|  / \_______ \____   | 										      	 |#####
#####|												                              \/          \/      \/          \/    |__| 										      	 |#####
#####|																																																													   |#####
#####| A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1,2,3 and 4.|#####
#####| If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. 											 |#####
#####| The lexicographic permutations of 0, 1 and 2 are: 																																					 |#####
#####| 						012   021   102   120   201   201  																																					 		 |#####
#####| 																																																														 |#####
#????|      What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?											   |?????
#####|_____________________________________________________________________________________________________________________________|#####
#########################################################################################################################################
############################################ https://projecteuler.net/problem=24 ########################################################

# 2 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1 = 725760
# 3 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1 = 1088640
# this means that the millionth value will be a number 2????????? so we need only calculate these.

puts 3 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1

# left = 0, right = left.next
# reset = Proc.new { pos1 = 0, pos2 = 1, pos3 = 2, pos4 = 3, pos5 = 4, pos6 = 5, pos7 = 6, pos8 = 7, pos9 = 8, pos10 = 9 }
# pos_arr = [pos1,pos2,pos3,pos4,pos5,pos6,pos7,pos8,pos9,pos10]

# until perms == 1_000_000
	
# 	until left > 9

# 		while pos_arr[right]

			
# 		end



# 	end

# end






